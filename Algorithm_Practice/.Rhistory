# 알고리즘 Level 1
library(stringr)
library(dplyr)
a <- 18
b <- 24
for(i in 1:a) {
if(a %% i == 0) print(i)
}
an <- c()
an <- c()
for(i in 1:a) {
if(a %% i == 0) an <- append(an, i)
}
an
bn <- c()
for(i in 1:a) { if(a %% i == 0) an <- append(an, i) }
for(i in 1:b) { if(b %% i == 0) bn <- append(bn, i)}
an
bn
an <- c()
bn <- c()
for(i in 1:a) { if(a %% i == 0) an <- append(an, i) }
for(i in 1:b) { if(b %% i == 0) bn <- append(bn, i) }
an
bn
an %in% bn
mutate(cn = an %in% bn)
# 알고리즘 Level 1
library(stringr)
library(dplyr)
# 알고리즘 Level 1
install.packages('stringr')
# 알고리즘 Level 1
install.packages('dplyr')
library(dplyr)
mutate(cn = an %in% bn)
cn
an
mutate(cn = an %in% bn) )
an
bn
mutate(cn = an %in% bn)
library(dplyr)
# 알고리즘 Level 1
install.packages('dplyr')
library(dplyr)
mutate(cn = an %in% bn)
subset(an, an %in% bn)
subset(an, an == bn)
subset(an, an %in bn)
subset(an, an %in% bn)
max(subset(an, an %in% bn))
grep(an, bn)
