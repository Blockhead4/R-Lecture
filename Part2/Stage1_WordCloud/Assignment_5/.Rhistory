for(i in 1:12) {
txt[i] <- readline(dataset[i])
}
txt <- 0
txt
txt <- c()
txt
dataset[1]
txt <- readLines(dataset[1])
dataset <- c()
for(i in 1:12) {
if(i < 10) {
dataset <- c(dataset, str_c("data/응답소_2015_0",i))
} else {
dataset <- c(dataset, str_c("data/응답소_2015_",i,))
}
}
dataset
dataset <- c()
for(i in 1:12) {
if(i < 10) {
dataset <- c(dataset, str_c("data/응답소_2015_0",i))
} else {
dataset <- c(dataset, str_c("data/응답소_2015_",i))
}
}
dataset
txt <- c()
txt <- readLines(dataset[1])
dataset <- c()
for(i in 1:12) {
if(i < 10) {
dataset <- c(dataset, str_c("data/응답소_2015_0",i,".txt"))
} else {
dataset <- c(dataset, str_c("data/응답소_2015_",i,"txt"))
}
}
dataset
dataset <- c()
for(i in 1:12) {
if(i < 10) {
dataset <- c(dataset, str_c("data/응답소_2015_0",i,".txt"))
} else {
dataset <- c(dataset, str_c("data/응답소_2015_",i,".txt"))
}
}
dataset
txt <- c()
txt <- readLines(dataset[1])
txt <- c()
txt <- c()
for(i in 1:12) {
txt[i] <- readLines(dataset[i])
}
str(txt)
txt[1]
View(txt)
txt
txt <- readLines(dataset[1])
txt
rm(list=ls())
#install.packages('KoNLP')
#install.packages('wordcloud')
#install.packages('stringr')
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(stringr)
useSejongDic()
src_dir <- c('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Assignment/data')
src_dir
src_file <- list.files(src_dir) # list
src_file
src_file_cnt <- length(src_file)
src_file_cnt
src_dir
src_file
setwd('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Assignment')
rm(list=ls())
src_dir <- 'data'
src_dir
src_file
src_file
src_file <- list.files(src_dir) # list
src_file
src_file_cnt <- length(src_file)
src_file_cnt
paste(src_dir, "/", src_file[1])
str_c(src_dir, "/", src_file[1])
for(i in 1:src_file_cnt) {
dataset <- readline(paste(src_dir, "/", src_file[i]))
}
dataset
rm(list=ls())
src_dir <- 'data'
src_dir
setwd('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Assignment')
src_file <- list.files(src_dir)
src_file
src_file_cnt <- length(src_file)
src_file_cnt
dataset <- c()
str_c(src_dir,"/",src_file[1])
rbind(dataset, readLines(str_c(src_dir,"/",src_file[1])))
dataset <- c()
for(i in 1:src_file_cnt) {
dataset <- rbind(dataset, readLines(str_c(src_dir,"/",src_file[i])))
}
response <- sapply(dataset, extractNoun, USE.NAMES = F)
head(unlist(response), 20)
cdata <- unlist(response)
response <- str_replace_all(cdata, '[^[:alpha:]]', '')
response <- gsub(" ", "", response)
length(response)
length(response)
response <- gsub("\\d+", "", respose)
response <- gsub("\\d+", "", response)
length(response)
head(unlist(respose), 30)
head(unlist(response), 30)
response
write(unlist(response), 'data/response.txt')
rev <- read.table('data/response.txt')
rev
View(response)
response
rev
str(rev)
wordcount <- table(rev)
wordcount
length(rev)
nrow(rev)
nrow(wordcount)
wordcount[1]
wordcount[2]
wordcount[3]
wordcount[4]
wordcount[5]
wordcount
View(wordcount)
wordcount[5]
new_wordcount <- wordcount[5]
new_wordcount
new_wordcount <- c()
cnt
cnt <- nrow(wordcount)
cnt
for(i in 1:cnt) {
if(wordcount >= 2) {
new_wordcount[i] <- wordcount[i]
} else
new_wordcount[i] <- ''
}
View(new_wordcount)
new_wordcount <- table()
rm(list = new_wordcount)
rm(new_wordcount)
rm(cnt)
View(wordcount)
response
head(sort(wordcount, decreasing = T), 30)
head(sort(wordcount, decreasing = T), 100)
head(sort(wordcount, decreasing = T), 200)
head(sort(wordcount, decreasing = T), 300)
head(sort(wordcount, decreasing = T), 500)
# 1. gsub 파일 만들기
txt <- readLines('data/response_gsuv.txt')
txt
length(response)
for(i in 1:length(txt)) {
response <- gsuv((txt[i]), '', response)
}
#install.packages('KoNLP')
#install.packages('wordcloud')
#install.packages('stringr')
library(rJava)
for(i in 1:length(txt)) {
response <- gsuv((txt[i]), '', response)
}
#install.packages('rJava')
#install.packages('KoNLP')
#install.packages('wordcloud')
#install.packages('stringr')
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(stringr)
useSejongDic()
length(response)
txt
for(i in 1:length(txt)) {
response <- gsuv((txt[i]), '', response)
}
response <- gsub(" ", "", response)
response <- gsub("\\d+", "", response)                    # 숫자형 데이터 전부 삭제
txt
length(response)
for(i in 1:length(txt)) {
response <- gsub((txt[i]), "", response)
}
length(response)
txt
write(unlist(response), 'data/response_2')
rev_2 <- read.table('data/response_2')
length(rev_2)
nrow(rev_2)
rev_2
wordcount_2 <- table(rev_2)
wordcount_2
head(sort(wordcount_2, decreasing = T), 30)
head(sort(wordcount_2, decreasing = T), 100)
head(sort(wordcount_2, decreasing = T), 300)
nrow(rev_2)
txt <- readLines('data/response_gsuv.txt')
txt <- readLines('data/response_gsuv.txt')
txt <- readLines('data/response_gsub.txt')
txt <- readLines('data/response_gsub.txt')
txt <- readLines('data/response_gsub.txt')
setwd('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Assignment')
txt <- readLines('data/response_gsub.txt')
txt <- readLines('data/response_gsub.txt')
txt
for(i in 1:length(txt)) {
response <- gsub((txt[i]), "", response)
}
write(unlist(response), 'data/response_2')
rev_2 <- read.table('data/response_2')
nrow(rev_2)
wordcount_2 <- table(rev_2)
head(sort(wordcount_2, decreasing = T), 300)
palete <- brewer.pal(9, 'Set3')
wordcloud(names(wordcount_2), freq=wordcount, scale = c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors = palete)
rm(list=ls())
src_dir <- 'data'; src_dir
src_file <- list.files(src_dir); src_file
src_file_cnt <- length(src_file); src_file_cnt
dataset <- c()
for(i in 1:src_file_cnt) {
dataset <- rbind(dataset, readLines(str_c(src_dir,"/",src_file[i])))
}
length(response)
response <- sapply(dataset, extractNoun, USE.NAMES = F)
setwd('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Assignment')
rm(list=ls())
src_dir <- 'data'; src_dir
src_file <- list.files(src_dir); src_file
src_file_cnt <- length(src_file); src_file_cnt
dataset <- c()
for(i in 1:src_file_cnt) {
dataset <- rbind(dataset, readLines(str_c(src_dir,"/",src_file[i])))
}
response <- sapply(dataset, extractNoun, USE.NAMES = F)
length(response)
head(unlist(response), 20)
cdata <- unlist(response)
response <- str_replace_all(cdata, '[^[:alpha:]]', '')    # 한글, 영어 제외 전부 삭제
response <- gsub(" ", "", response)
response <- gsub("\\d+", "", response)                    # 숫자형 데이터 전부 삭제
head(unlist(response), 30)
response
write(unlist(response), 'data/response.txt')
rev <- read.table('data/response.txt')
rev
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 100)
txt <- readLines('data/response_gsub.txt')
txt
for(i in 1:length(txt)) {
response <- gsub((txt[i]), "", response)
}
response
write(unlist(response), 'data/response_2.txt')
rev_2 <- read.table('data/response_2.txt')
nrow(rev_2)
wordcount_2 <- table(rev_2)
head(sort(wordcount_2, decreasing = T), 300)
palete <- brewer.pal(9, 'Set3')
wordcloud(names(wordcount_2), freq=wordcount, scale = c(5,1), rot.per = 0.25,
min.freq = 1, random.order = F, random.color = T, colors = palete)
dataset <- c()
setwd('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Assignment')
src_dir <- 'data'; src_dir
src_file <- list.files(src_dir); src_file
src_file_cnt <- length(src_file); src_file_cnt
dataset <- c()
for(i in 1:src_file_cnt) {
dataset <- rbind(dataset, readLines(str_c(src_dir,"/",src_file[i])))
}
dataset <- c()
setwd('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Assignment')
rm(list=ls())
src_dir <- 'data'; src_dir
src_file <- list.files(src_dir); src_file
src_file_cnt <- length(src_file); src_file_cnt
dataset <- c()
for(i in 1:src_file_cnt) {
dataset <- rbind(dataset, readLines(str_c(src_dir,"/",src_file[i])))
}
response <- sapply(dataset, extractNoun, USE.NAMES = F)
head(unlist(response), 20)
cdata <- unlist(response)
response <- str_replace_all(cdata, "[^[:alpha:]]", "")    # 한글, 영어 제외 전부 삭제
response <- gsub(" ", "", response)
response <- gsub("\\d+", "", response)                    # 숫자형 데이터 전부 삭제
head(unlist(response), 30)
response
write(unlist(response), 'response.txt')
rev <- read.table('response.txt')
rev
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 100)
rev
head(sort(wordcount, decreasing = T), 100)
response <- Filter(function(x) {nchar(x) >= 2}, response)
response
write(unlist(response), 'response.txt')
rev <- read.table('response.txt')
rev
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 100)
txt <- readLines('response_gsub.txt')
txt
response
for(i in 1:length(txt)) {
response <- gsub((txt[i]), "", response)
}
response
write(unlist(response), 'response_2.txt')
rev_2 <- read.table('response_2.txt')
rev_2
nrow(rev_2)
wordcount_2 <- table(rev_2)
head(sort(wordcount_2, decreasing = T), 300)
palete <- brewer.pal(9, 'Set3')
wordcloud(names(wordcount_2), freq=wordcount, scale = c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount_2), freq=wordcount_2, scale = c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount_2), freq=wordcount_2, scale = c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors = palete)
head(sort(wordcount_2, decreasing = T), 300)
head(sort(wordcount_2, decreasing = T), 300)
response
response <- Filter(function(x) {nchar(x) >= 2}, response)
response
write(unlist(response), 'response_2.txt')
rev_2 <- read.table('response_2.txt')
nrow(rev_2)
wordcount_2 <- table(rev_2)
head(sort(wordcount_2, decreasing = T), 300)
palete <- brewer.pal(9, 'Set3')
wordcloud(names(wordcount_2), freq=wordcount_2, scale = c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors = palete)
response <- gsub("시장", "", response)
response <- gsub("제목", "", response)
response <- gsub("저희", "", response)
response <- gsub("내용", "", response)
response <- gsub("관련", "", response)
response <- gsub("지역", "", response)
response <- gsub("Sh", "", response)
write(unlist(response), 'response_2.txt')
rev_2 <- read.table('response_2.txt')
nrow(rev_2)
wordcount_2 <- table(rev_2)
head(sort(wordcount_2, decreasing = T), 300)
palete <- brewer.pal(9, 'Set3')
wordcloud(names(wordcount_2), freq=wordcount_2, scale = c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors = palete)
legend(0.3, 1, '2015년 서울시 응답소 키워드', cex=0.8, fill=NA, border=NA,
bg='white', text.col='red', text.font=2, box.col='red')
legend(0.3, 1, '2015년 서울시 응답소 키워드', cex=0.8, fill=NA, border=NA,
bg='white', text.col='blue', text.font=4, box.col='blue')
legend(0.3, 1, '2015년 서울시 응답소 키워드', cex=0.8, fill=NA, border=NA,
bg='white', text.col='blue', text.font=2, box.col='blue')
legend(0.3, 1, '2015년 서울시 응답소 키워드', cex=0.8, fill=NA, border=NA,
bg='white', text.col='blue', text.font=2, text.size = 2, box.col='blue')
?legend
wordcloud(names(wordcount_2), freq=wordcount_2, scale = c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors = palete)
legend(0.3, 1, '2015년 서울시 응답소 키워드', cex=2, fill=NA, border=NA,
bg='white', text.col='blue', text.font=2, box.col='blue')
legend(0.3, 1, '2015년 서울시 응답소 키워드', cex=1, fill=NA, border=NA,
bg='white', text.col='blue', text.font=2, box.col='blue')
knitr::opts_chunk$set(echo = TRUE)
#install.packages('KoNLP')
#install.packages('wordcloud')
#install.packages('stringr')
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(stringr)
for(i in 1:10) {
name <- paste("data", i, sep = " ")
assign(name, i)
}
data1
data 1
data 1
data1
for(i in 1:10) {
name <- paste("data", i, sep = "")
assign(name, i)
}
data1
data2
for(i in 1:10) {
name <- paste("data", i, sep = "")
assign(name, i)
print(name)
}
src_dir
setwd('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Assignment')    # working directory 지정
list.files('data')
length(filenames)
filenames <- list.files('data')
length(filenames)
scr_dir <- 'data'
str_c(src_dir,"/",filenames[1])
for(i in 1:length(filenames)) {
name <- paste("data", i, sep = "")
assign(name, readLines(str_c(src_dir,"/",filenames[i])))
}
name
#install.packages('KoNLP')
#install.packages('wordcloud')
#install.packages('stringr')
library(rJava)library(KoNLP)
#install.packages('KoNLP')
#install.packages('wordcloud')
#install.packages('stringr')
library(rJava)
for(i in length(filenames)) {
sname <- paste("sdata", i, sep ="")
temp <- paste("data", i, sep = "")
assign(sname, sapply(temp, extractNoun, USE.NAMES = F))
}
sdata1
sdata12
data1
for(i in 1:length(filenames)) {
sname <- paste("sdata", i, sep ="")
temp <- paste("data", i, sep = "")
assign(sname, sapply(temp, extractNoun, USE.NAMES = F))
}
sdata12
for(i in 1:length(filenames)) {
name <- paste("data", i, sep = "")
assign(name, readLines(str_c(src_dir,"/",filenames[i])))
assign(name, sapply(name, extractNoun, USE.NAMES = F))
}
data1
for(i in 1:length(filenames)) {
}
filenames <- list.files('data')
str_c(src_dir,"/",filenames[1])
for(i in 1:length(filenames)) {
name <- paste("data", i, sep = "")
assign(name, readLines(str_c(src_dir,"/",filenames[i])))
}
#install.packages('rJava')
#install.packages('KoNLP')
#install.packages('wordcloud')
#install.packages('stringr')
library(rJava)
#install.packages('rJava')
#install.packages('KoNLP')
#install.packages('wordcloud')
#install.packages('stringr')
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(stringr)
useSejongDic()
setwd('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Assignment')    # working directory 지정
src_dir <- 'data'; src_dir   # 데이터 파일이 있는 폴더 경로 저장
src_file <- list.files(src_dir); src_file    # 파일 이름 저장
src_file_cnt <- length(src_file); src_file_cnt     # 파일 개수 저장
scr_dir <- 'data'
rm(scr_dir)
src_dir
src_file
for(i in 1:length(filenames)) {
name <- paste("data", i, sep = "")
assign(name, readLines(str_c(src_dir,"/",src_file[i])))
}
for(i in 1:length(src_fie)) {
name <- paste("data", i, sep = "")
assign(name, readLines(str_c(src_dir,"/",src_file[i])))
}
for(i in 1:length(src_file)) {
name <- paste("data", i, sep = "")
assign(name, readLines(str_c(src_dir,"/",src_file[i])))
}
data1
for(i in 1:length(src_file)) {
a <- readLines(str_c(src_dir,"/",src_file[i]))
a <- sapply(a, extractNoun, USE.NAMES = F)
name <- paste("data", i, sep = "")
assign(name, a)
}
data <- c()
data <- c()
for(i in 1:length(src_file)) {
data <- rbind(data, str_c("data",i))
}
data
data <- data.frame()
class(data)
class(data1)
