setwd('d:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Ex01_Seoul_Response')
#install.packages('rJava')
#install.packages('KoNLP')      # 한국어 작업을 할 때 꼭 필요한 패키지
#install.packages('wordcloud')
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
data4 <- read.table('data/seoul_3.txt')
wordcount <- table(data4)
head(sort(wordcount, decreasing = T), 20)
palete <- brewer.pal(9, 'Set3')
palete
wordcloud(names(wordcount), freq=wordcount, scale=c(5,1), rot.per = 0.25,
min.freq = 1, random.order = F, random.color = T, colors = palete)
legend(0.3, 1, '서울시 응답소 요청사항 분석', cex=0.8, fill=NA, border=NA,
bg='white', text.col='red', text.font=2, box.col='red')
v3 <- c('봄이 지나면 여름이고 여름이 지나면 가을입니다.', '그리고 겨울이죠')
v3
extractNoun(v3)
sapply(v3, extractNoun, USE.NAMES = F)
v4 <- sapply(v3, extractNoun, USE.NAMES = F)
v4
wordcount
View(wordcount)
palete
wordcloud(c(letters, LETTERS, 0:9), seq(1, 1000, len=62))
?seq
# 색상 없이 워드 클라우드 생성
wordcloud(c(letters, LETTERS, 0:9), seq(1, 1000, len=62))
?len
??len
# 색상 없이 워드 클라우드 생성
wordcloud(c(letters, LETTERS, 0:9), seq(1, 1000, len=62))
seq(1, 1000, len=62)
library(RColorBrewer)
# 색상을 사용해서 워드 클라우드 생성
palete <- brewer.pal(9, 'Set1')
wordcloud(c(letters, LETTERS, 0:9), seq(1, 1000, len=62), colors = palete)
setwd('d:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Ex02_Female_PlasticSurgery'))
setwd('d:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Ex02_HS_Female_PlasticSurgery'))
setwd('D:\Workspace-JWP\R_Data_Analysis\R-Lecture\Part2\Stage1_WordCloud\Ex02_HS_Female_PlasticSurgery'))
setwd('D:\Workspace-JWP\R_Data_Analysis\R-Lecture\Part2\Stage1_WordCloud\Ex02_HS_Female_PlasticSurgery')
setwd('D:/Workspace-JWP\R_Data_Analysis\R-Lecture\Part2\Stage1_WordCloud\Ex02_HS_Female_PlasticSurgery')
setwd('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Ex02_HS_Female_PlasticSurgery')
library(KoNLP)
library(wordcloud)
useSejongDic()
data1 <- readLines('data/remake.txt')
data1
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2
data3 <- unlist(data2)
data3
data3 <- Filter(function(x) {nchar(x) <= 10}, data3)
data3
data3
View(data3)
data3 <- unlist(data2)
data3
nrow(data3)
length(data3)
data3 <- Filter(function(x) {nchar(x) <= 10}, data3)
length(data3)
data3
head(unlist(data3), 30)
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2      # 리스트 형태의 명사만 추출된 데이터
data3 <- unlist(data2)
length(data3)
data3 <- Filter(function(x) {nchar(x) <= 10}, data3)
head(unlist(data3), 30)
head(unlist(data3), 30)
data3 <- gsub('\\d+', '', data3)
data3 <- gsub('\\d+', '', data3)
data3 <- gsub('쌍수', '쌍꺼풀', data3)
data3 <- gsub('쌍커풀', '쌍꺼풀', data3)
data3 <- gsub('메부리코', '매부리코', data3)
data3 <- gsub('\\.', '', data3)
data3 <- gsub(' ', '', data3)
data3 <- gsub("\\'", '', data3)
txt <- readline('data/성형gsub.txt')
txt
txt <- readline('data/성형gsub.txt')
txt <- readLines('data/성형gsub.txt')
txt
for(i in length(txt)) {
data3 <- gsub(txt[i], '', data3)
}
data3
data3 <- gsub('수', '', data3)
data3 <- gsub('ㅠㅠㅠㅠ', '', data3)
data3 <- gsub('것', '', data3)
data3 <- gsub('적', '', data3)
data3 <- gsub('저', '', data3)
data3 <- gsub('기', '', data3)
write(unlist(dat3), 'remake_2.txt')
write(unlist(data3), 'remake_2.txt')
write(unlist(data3), 'data/remake_2.txt')
data4 <- read.table('data/reamake_2.txt')
data4 <- read.table('data/remake_2.txt')
data4
data3
data1 <- readLines('data/remake.txt')
data1      # 파일에서 읽은 원시 데이터
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2      # 리스트 형태의 명사만 추출된 데이터
data3 <- unlist(data2)
data3      # 명사만 추출된 데이터
data3 <- Filter(function(x) {nchar(x) <= 10}, data3)
data3      # 10 글자보다 큰 문자는 제외된 데이터
head(unlist(data3), 30)
data3 <- gsub('\\d+', '', data3)
data3 <- gsub('쌍수', '쌍꺼풀', data3)
data3 <- gsub('쌍커풀', '쌍꺼풀', data3)
data3 <- gsub('메부리코', '매부리코', data3)
data3 <- gsub('\\.', '', data3)
data3 <- gsub(' ', '', data3)
data3 <- gsub("\\'", '', data3)
txt <- readLines('data/성형gsub.txt')
txt
for(i in length(txt)) {
data3 <- gsub(txt[i], '', data3)
}
data3
data3 <- gsub('수', '', data3)
data3 <- gsub('ㅠㅠㅠㅠ', '', data3)
data3 <- gsub('것', '', data3)
data3 <- gsub('적', '', data3)
data3 <- gsub('저', '', data3)
data3 <- gsub('기', '', data3)
data3
write(unlist(data3), 'data/remake_2.txt')
data4 <- read.table('data/remake_2.txt')
data4
nrow(data4)
data3 <- Filter(function(x) {nchar(x) >= 2}, data3)
data3      # 10 글자보다 큰 문자는 제외된 데이터
head(unlist(data3), 30)
data3 <- gsub('\\d+', '', data3)
data3 <- gsub('쌍수', '쌍꺼풀', data3)
data3 <- gsub('쌍커풀', '쌍꺼풀', data3)
data3 <- gsub('메부리코', '매부리코', data3)
data3 <- gsub('\\.', '', data3)
data3 <- gsub(' ', '', data3)
data3 <- gsub("\\'", '', data3)
txt <- readLines('data/성형gsub.txt')
txt
for(i in length(txt)) {
data3 <- gsub(txt[i], '', data3)
}
data3
write(unlist(data3), 'data/remake_2.txt')
data4 <- read.table('data/remake_2.txt')
data4
nrow(data4)
data3      # 10 글자보다 큰 문자는 제외된 데이터
nrow(data3)      # 10 글자보다 큰 문자는 제외된 데이터
length(data3)      # 10 글자보다 큰 문자는 제외된 데이터
data1 <- readLines('data/remake.txt')
data1      # 파일에서 읽은 원시 데이터
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2      # 리스트 형태의 명사만 추출된 데이터
data3 <- unlist(data2)
data3      # 명사만 추출된 데이터
data3 <- Filter(function(x) {nchar(x) <= 10}, data3)
length(data3)      # 10 글자보다 큰 문자는 제외된 데이터
head(unlist(data3), 30)
data3 <- gsub('\\d+', '', data3)
data3 <- gsub('쌍수', '쌍꺼풀', data3)
data3 <- gsub('쌍커풀', '쌍꺼풀', data3)
data3 <- gsub('메부리코', '매부리코', data3)
data3 <- gsub('\\.', '', data3)
data3 <- gsub(' ', '', data3)
data3 <- gsub("\\'", '', data3)
txt <- readLines('data/성형gsub.txt')
txt
for(i in length(txt)) {
data3 <- gsub(txt[i], '', data3)
}
data3
write(unlist(data3), 'data/remake_2.txt')
data4 <- read.table('data/remake_2.txt')
data4
nrow(data4)
wordcount <- table(data4)
data3 <- gsub('쌍수', '쌍꺼풀', data3)
data3
data3 <- gsub('적', '', data3)
data3 <- gsub('개', '', data3)
data3 <- gsub('수', '', data3)
data3 <- gsub('술', '', data3)
data3 <- gsub('때', '', data3)
data3 <- gsub('넣치', '', data3)
data3 <- gsub('&', '', data3)
write(unlist(data3), 'data/remake_2.txt')
data4 <- read.table('data/remake_2.txt')
data4
nrow(data4)
wordcount <- table(data4)
wordcount
head(sort(wordcount, decreasing = T), 30)
library(RColorBrewer)
palete <- brewer.pal(9, 'Set3')
palete
wordcount <- table(data4)
wordcount
head(sort(wordcount, decreasing = T), 30)
palete <- brewer.pal(9, 'Set3')
palete
wordcloud(naems(wordcount), freq=wordcount, scale=c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors =palete)
wordcloud(names(wordcount), freq=wordcount, scale=c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors =palete)
legend(0.3, 1, '여고생들이 선호하는 성형수술 부위', cex=0.8, fill=NA, border=NA,
bg='white', text.col='red', text.font=2, box.col='red')
txt
txt
for(i in length(txt)) {
data3 <- gsub(txt[i], '', data3)
}
data3
txt
txt
for(i in length(txt)) {
data3 <- gsub((txt[i]), '', data3)
}
data3
txt
txt[1]
class(txt)
for(i in length(txt)) {
data3 <- gsub((txt[i]), '', data3)
}
data3
data3 <- gsub('&', '', data3)
data3 <- gsub('성형외과', '', data3)
data3 <- gsub('답변', '', data3)
data3 <- gsub('의사', '', data3)
data3 <- gsub('성형', '', data3)
data3 <- gsub('추천', '', data3)
write(unlist(data3), 'data/remake_2.txt')
data4 <- read.table('data/remake_2.txt')
data4
nrow(data4)
wordcount <- table(data4)
wordcount
head(sort(wordcount, decreasing = T), 30)
palete <- brewer.pal(9, 'Set3')
palete
wordcloud(names(wordcount), freq=wordcount, scale=c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors =palete)
legend(0.3, 1, '여고생들이 선호하는 성형수술 부위', cex=0.8, fill=NA, border=NA,
bg='white', text.col='red', text.font=2, box.col='red')
setwd('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Ex03_Jeju')
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
useSejongDic()
library(stringr)
mergeUserDic(data.frame(readLines('data/제주도여행지.txt'), 'ncn'))
txt <- readLines('data/jeju.txt')
txt
place <- sapply(txt, extractNoun, USE.NAMES = F)
place
head(unlist(place), 30)
cdata <- unlist(place)
place <- str_replace_all(cdata, '[^[:alpha:]]', '')
place <- gsub(' ', '', place)
txt <- readLines('data/제주도여행코스gsub.txt')
txt
for(i in 1:length(txt)) {
data3 <- gsub((txt[i]), '', data3)
}
data3
data1 <- readLines('data/remake.txt')
data1      # 파일에서 읽은 원시 데이터
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2      # 리스트 형태의 명사만 추출된 데이터
data3 <- unlist(data2)
data3      # 명사만 추출된 데이터
data3 <- Filter(function(x) {nchar(x) <= 10}, data3)
length(data3)      # 10 글자보다 큰 문자는 제외된 데이터
head(unlist(data3), 30)
data3 <- gsub('\\d+', '', data3)
data3 <- gsub('쌍수', '쌍꺼풀', data3)
data3 <- gsub('쌍커풀', '쌍꺼풀', data3)
data3 <- gsub('메부리코', '매부리코', data3)
data3 <- gsub('\\.', '', data3)
data3 <- gsub(' ', '', data3)
data3 <- gsub("\\'", '', data3)
txt <- readLines('data/성형gsub.txt')
txt
for(i in 1:length(txt)) {
data3 <- gsub((txt[i]), '', data3)
}
data3
data3 <- gsub('적', '', data3)
data3 <- gsub('개', '', data3)
data3 <- gsub('수', '', data3)
data3 <- gsub('술', '', data3)
data3 <- gsub('때', '', data3)
data3 <- gsub('넣치', '', data3)
data3 <- gsub('&', '', data3)
data3 <- gsub('성형외과', '', data3)
data3 <- gsub('답변', '', data3)
data3 <- gsub('의사', '', data3)
data3 <- gsub('성형', '', data3)
data3 <- gsub('추천', '', data3)
write(unlist(data3), 'data/remake_2.txt')
data4 <- read.table('data/remake_2.txt')
data4
nrow(data4)
wordcount <- table(data4)
wordcount
head(sort(wordcount, decreasing = T), 30)
palete <- brewer.pal(9, 'Set3')
palete
wordcloud(names(wordcount), freq=wordcount, scale=c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors =palete)
legend(0.3, 1, '여고생들이 선호하는 성형수술 부위', cex=0.8, fill=NA, border=NA,
bg='white', text.col='red', text.font=2, box.col='red')
txt
for(i in 1:length(txt)) {
place <- gsub((txt[i]), '', place)
}
place
txt <- readLines('data/jeju.txt')
txt
place <- sapply(txt, extractNoun, USE.NAMES = F)
place
length(place)
head(unlist(place), 30)
cdata <- unlist(place)
place <- str_replace_all(cdata, '[^[:alpha:]]', '')     # 한글, 영어 외에는 삭제
place <- gsub(' ', '', place)
lenth(place)
length(place)
txt <- readLines('data/jeju.txt')
txt
place <- sapply(txt, extractNoun, USE.NAMES = F)
place
length(place)
nrow(place)
length(place)
cdata <- unlist(place)
place <- str_replace_all(cdata, '[^[:alpha:]]', '')     # 한글, 영어 외에는 삭제
place <- gsub(' ', '', place)
length(place)
txt <- readLines('data/제주도여행코스gsub.txt')
txt
for(i in 1:length(txt)) {
place <- gsub((txt[i]), '', place)
}
place
place <- Filter(function(x) {nchar(x) >=2}, place)
write(unlist(place), 'data/jeju_2.txt')
rev <- read.table('data/jeju_2.txt')
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 30)
palete <- brewer.pal(9, 'Set1')
wordcloud(names(wordcount), freq=wordcount, scale = c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors = palete)
legend(0.3, 1, '제주도 추천 여행 코스 분석', cex=0.8, fill=NA, border=NA,
bg='white', text.col='red', text.font='2', box.col='red')
legend(0.3, 1, '제주도 추천 여행 코스 분석', cex=0.8, fill=NA, border=NA,
bg='white', text.col='red', text.font=2, box.col='red')
txt <- readLines('data/jeju.txt')
txt
place <- sapply(txt, extractNoun, USE.NAMES = F)
View(place)
place
txt <- readLines('data/성형gsub.txt')
txt
txt <- readLines('data/성형gsub.txt')
head(sort(wordcount, decreasing = T), 30)
?sort
rev
View(rev)
View(rev)nrow(rev)
View(rev)
wordcount
?table
a <- c('a', 'b','c','a','b')
a
ad <- table(a)
ad
class(ad)
class(rev)
typeof(rev[1])
class(wordcount)
typeof(wordcount)
typeof(ad)
b <- c(1,2,3,4,5,1,2,3)
ab <- table(b)
ab
class(b)
class(ab)
typeof(ab)
ar <- array(1:9, 1,2,3)
txt <- readLines('data/성형gsub.txt')
setwd('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Part2/Stage1_WordCloud/Ex02_HS_Female_PlasticSurgery')
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
data1 <- readLines('data/remake.txt')
data1      # 파일에서 읽은 원시 데이터
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2      # 리스트 형태의 명사만 추출된 데이터
data3 <- unlist(data2)
data3      # 명사만 추출된 데이터
data3 <- Filter(function(x) {nchar(x) <= 10}, data3)
length(data3)      # 10 글자보다 큰 문자는 제외된 데이터
head(unlist(data3), 30)
data3 <- gsub('\\d+', '', data3)
data3 <- gsub('쌍수', '쌍꺼풀', data3)
data3 <- gsub('쌍커풀', '쌍꺼풀', data3)
data3 <- gsub('메부리코', '매부리코', data3)
data3 <- gsub('\\.', '', data3)
data3 <- gsub(' ', '', data3)
data3 <- gsub("\\'", '', data3)
txt <- readLines('data/성형gsub.txt')
txt
for(i in 1:length(txt)) {
data3 <- gsub((txt[i]), '', data3)
}
txt
typeof(txt)
class(txt)
data3
data3 <- gsub('적', '', data3)
data3 <- gsub('개', '', data3)
data3 <- gsub('수', '', data3)
data3 <- gsub('술', '', data3)
data3 <- gsub('때', '', data3)
data3 <- gsub('넣치', '', data3)
data3 <- gsub('&', '', data3)
data3 <- gsub('성형외과', '', data3)
data3 <- gsub('답변', '', data3)
data3 <- gsub('의사', '', data3)
data3 <- gsub('성형', '', data3)
data3 <- gsub('추천', '', data3)
write(unlist(data3), 'data/remake_2.txt')
data4 <- read.table('data/remake_2.txt')
data4
nrow(data4)
wordcount <- table(data4)
wordcount
head(sort(wordcount, decreasing = T), 30)
palete <- brewer.pal(9, 'Set3')
palete
wordcloud(names(wordcount), freq=wordcount, scale=c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors =palete)
data3 <- gsub('시', '', data3)
data3 <- gsub('것', '', data3)
data3 <- gsub('한', '', data3)
data3 <- gsub('시', '', data3)
data3 <- gsub('후', '', data3)
write(unlist(data3), 'data/remake_2.txt')
data4 <- read.table('data/remake_2.txt')
data4
nrow(data4)
wordcount <- table(data4)
wordcount
head(sort(wordcount, decreasing = T), 30)
palete <- brewer.pal(9, 'Set3')
palete
wordcloud(names(wordcount), freq=wordcount, scale=c(5,1), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors =palete)
legend(0.3, 1, '여고생들이 선호하는 성형수술 부위', cex=0.8, fill=NA, border=NA,
bg='white', text.col='red', text.font=2, box.col='red')
