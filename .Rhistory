# 2) 이상치를 제거하기 전과 후의 평균과 표준편차
data2 <- c(mean(data1$Sepal.Width), sd(data1$Sepal.Width))
data2
data1
boxplot(data1)
for(i in 1:nrow(data1)) {
if(data1$Sepal.Width[i] < 2.5)
print(i)
}
for(i in 1:nrow(data1)) {
if(data1[i] < 2.5)
print(i)
}
data1[1]
for(i in 1:nrow(data1)) {
if(data1[i,] < 2.5)
print(i)
}
data2
data1[42,]
data3 <- data1[-42,]
nrow(data3)
data3 <- data1[-42,]
data3
nrow(data3)
rdata1 <- data1[-42,]
data3 <- c(mean(rdata1), sd(rdata1))
data3
data2, data3
c(data2, data3)
data2
data3
mpg
class(mpg)
# 6. R 내장 데이터인 "mpg"를 이용하여 다음을 구하시오.
mpg1 <- as.data.frame(mpg)
mpg1
# 6. R 내장 데이터인 "mpg"를 이용하여 다음을 구하시오.
head(mpg)
str(mpg)
summarise(mpg)
summary(mpg)
mpg1 <- mpg %>%
filter(manufacturer=="toyota")
mpg1
mpg1 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model)
mpg1
mpg1 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise_each(list(mean), cty, hwy)
mpg1
mpg1 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise_each(fun(mean), cty, hwy)
mpg1 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise_each(funs(mean), cty, hwy)
mpg1
mpg1 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise_each(funs(mean), cty, hwy) %>%
arrange(desc(cty, hwy))
mpg1
mpg1 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise_each(funs(mean), cty, hwy) %>%
arrange(desc(cty, hwy)) %>%
head(3)
mpg1
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise_each(funs(mean), cty, hwy) %>%
arrange(desc(cty, hwy)) %>%
head(3)
top3
rm(mpg1)
# Test 1
library(dplyr)
# 1)
vec1 <- c(1:6)
# 2)
vec2 <- c(10:5)
# 3)
vec3 <- rep(1:3, each=2)
# 4)
vec4 <- rep(1:3, 2)
# 5)
vec5 <- seq(1, 11, 2)
v1 <- c("강경학", "김태균", "이성열", "정은원")
v2 <- c(90, 78, 94, 70)
v3 <- c(50, 60, 90, 92)
df_score <- data.frame(이름=v1, 중간=v2, 기말=v3)
df_score
v4 <- c()
mean <- c()
for(i in 1:nrow(df_score)) {
v4 <- rbind(v4, c(df_score$중간[i], df_score$기말[i]))
mean <- rbind(mean, mean(v4[i,]))
}
df_score$평균 <- mean
df_score
# 3. 2번 문제에 학점이라는 필드를 만들고, 평균 성적에 따라 학점을 부여하시오.
df_score$학점 <- ""
for(i in 1:nrow(df_score)) {
if(df_score$평균[i] >= 90){
df_score$학점[i] <- "A"
} else if(df_score$평균[i] >= 80){
df_score$학점[i] <- "B"
} else if(df_score$평균[i] >= 70){
df_score$학점[i] <- "C"
} else if(df_score$평균[i] >= 60){
df_score$학점[i] <- "D"
} else {
df_score$학점[i] <- "F"
}
}
df_score
oddSum <- function(num) {
sum <- 1
for(i in 2:num) {
if(i %% 2 == 1) {
sum <- sum + i
}
}
return(sum)
}
oddSum(100)
# 1) "setosa" 종 Sepal.Width의 Box Plot을 그려 이상치를 확인할 것
data1 <- select(subset(iris, Species == "setosa"), Sepal.Width)
data1
boxplot(data1)
# 2) 이상치를 제거하기 전과 후의 평균과 표준편차
data2 <- c(mean(data1$Sepal.Width), sd(data1$Sepal.Width))
data2
for(i in 1:nrow(data1)) {
if(data1[i,] < 2.5)
print(i)
}
rdata1 <- data1[-42,]
data3 <- c(mean(rdata1), sd(rdata1))
data3
data2
data3
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise_each(funs(mean), cty, hwy) %>%
arrange(desc(cty, hwy)) %>%
head(3)
top3
head(mpg)
View(mpg)
View(mpg)
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(list(mean), cty) %>%
arrange(desc(cty))
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(list(mean), cty) %>%
arrange(desc(cty))
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average_cty = mean(cty)) %>%
arrange(desc(cty))
suv7 <- mpg %>%
filter(class=="suv")
suv7
suv7 <- mpg %>%
suv7 <- mpg %>%
susdafa
suv7 <- mpg %>%
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer
)
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer)
suv7
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(list(average= mean(cty)))
suv7
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average= mean(cty))
suv7
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average_cty= mean(cty))
suv7
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average_cty=mean(cty)) %>%
arrange(desc(average_cty))
suv7
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average_cty=mean(cty)) %>%
arrange(desc(average_cty)) %>%
head(7)
suv7
barplot(suv7, fill=rainbow(nrow(suv7)))
library(ggplot2)
ggplot(suv7, aes(x=manufacturer, y=average_cty, fill=manufacturer)) + geom_bar(stat="identity")
ggplot(suv7, aes(x=reorder(manufacturer, -average_cty), y=average_cty, fill=manufacturer)) + geom_bar(stat="identity")
# 1) clarity 의 돗수를 보여주는 그래프
head(diamonds)
ggplot(diamonds, aes(x="", y=clarity, fill=clarity)) + geom_histogram()
ggplot(diamonds, aes(x="", y=clarity, fill=clarity)) + geom_histogram(stat="identity")
ggplot(diamonds, aes(x="", y=clarity, fill=clarity)) + geom_histogram(stat="identity", position = "dodge")
ggplot(diamonds, aes(y=clarity, fill=clarity)) + geom_histogram(stat="identity", position = "dodge")
ggplot(diamonds, aes(x="", y=clarity, fill=clarity)) + geom_histogram(stat="identity", position = "dodge")
View(diamonds)
d <- diamonds %>%
arrange(desc(clarity))
d
View(d)
d <- diamonds %>%
group_by(clarity) %>%
summarise(count = list(n()))
d
d <- diamonds %>%
group_by(clarity) %>%
summarise(count = n())
d
d <- diamonds %>%
group_by(clarity) %>%
summarise(count = n()) %>%
arrange(count)
d
ggplot(d, aes(x=clarity, y=count, fill=clarity)) + geom_histogram(stat="identity", position = "dodge")
# 2) clarity에 따른 가격의 변화를 보여주는 그래프
d2 <- diamonds %>%
group_by(clarity) %>%
summarise(average_price = mean(price)) %>%
arrange(price)
d2
head(diamonds)
# 2) clarity에 따른 가격의 변화를 보여주는 그래프
d2 <- diamonds %>%
group_by(clarity) %>%
summarise(average_price = mean(price)) %>%
arrange(average_price)
d2
ggplot(d2, aes(x=clarity, y=average_price, fill=clarity)) + geom_histogram(stat="identity", position = "dodge")
# 1) OPS(출루율+장타율)와 연봉대비 OPS(OPS/연봉*100)를 구하시오
b <- read.csv("data/야구성적.csv")
b
head(b)
View(b)
b1 <- b %>%
mutate(OPS = 출루율+장타율) %>%
mutate(연봉대비_OPS = OPS/연봉*100)
head(b)
b
head(b1)
b1 <- b %>%
mutate(OPS = 출루율+장타율) %>%
mutate(연봉대비OPS = OPS/연봉*100)
head(b1)
ggplot(b1, aes(x=선수명, y=연봉대비OPS, fill=선수명)) + geom_bar(stat="identity")
# 2) 연봉대비OPS를 선수별로 비교할 수 있는 막대그래프
ggplot(b1, aes(x=선수명, y=연봉대비OPS, fill=선수명)) + geom_bar(stat="identity") +
theme_light() +
ggtitle("선수별 연봉대비OPS") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(d2, aes(x=clarity, y=average_price, fill=clarity)) + geom_histogram(stat="identity", position = "dodge")
# 2) 연봉대비OPS를 선수별로 비교할 수 있는 막대그래프
ggplot(b1, aes(x=선수명, y=연봉대비OPS, fill=선수명)) + geom_bar(stat="identity") +
theme_light() +
ggtitle("선수별 연봉대비OPS") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(angle = 45, size=8))
# 2) 연봉대비OPS를 선수별로 비교할 수 있는 막대그래프
ggplot(b1, aes(x=선수명, y=연봉대비OPS, fill=선수명)) + geom_bar(stat="identity") +
theme_light() +
ggtitle("선수별 연봉대비OPS") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(angle = 45, size=10))
# 2) 연봉대비OPS를 선수별로 비교할 수 있는 막대그래프
ggplot(b1, aes(x=선수명, y=연봉대비OPS, fill=선수명)) + geom_bar(stat="identity") +
theme_light() +
ggtitle("선수별 연봉대비OPS") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(hjust=1, vjust=1, angle = 45, size=10))
ggplot(d2, aes(x=clarity, y=average_price, fill=clarity)) + geom_histogram(stat="identity", position = "dodge") +
theme_light() +
ggtitle("clarity * price") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14))
ggplot(d, aes(x=clarity, y=count, fill=clarity)) + geom_histogram(stat="identity", position = "dodge")
ggplot(d, aes(x=clarity, y=count, fill=clarity)) + geom_histogram(stat="identity", position = "dodge") +
theme_light() +
ggtitle("clarity") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14))
ggplot(suv7, aes(x=reorder(manufacturer, -average_cty),
y=average_cty, fill=manufacturer)) +
geom_bar(stat="identity")
ggplot(suv7, aes(x=reorder(manufacturer, -average_cty),
y=average_cty, fill=manufacturer)) +
geom_bar(stat="identity") +
theme_light() +
ggtitle("시내연비 TOP7 SUV") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(hjust=1, vjust=1, angle = 45, size=10))
ggplot(suv7, aes(x=reorder(manufacturer, -average_cty),
y=average_cty, fill=manufacturer)) +
geom_bar(stat="identity") +
theme_light() +
ggtitle("시내연비 TOP7 SUV") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(hjust=1, vjust=1, size=10))
ggplot(suv7, aes(x=reorder(manufacturer, -average_cty),
y=average_cty, fill=manufacturer)) +
geom_bar(stat="identity") +
theme_light() +
ggtitle("시내연비 TOP7 SUV Manufacturer") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(hjust=1, vjust=1, size=10))
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise_each(funs(mean), cty, hwy) %>%
arrange(desc(cty, hwy)) %>%
head(3)
top3
boxplot(data1)
boxplot(data1, fill=rainbow(3))
?boxplot
data1
boxplot(data1, col=rainbow(50))
boxplot(data1, col="skyblue")
boxplot(data1, col="skyblue", main="Setosa - Sepal.Width Box Plot")
?Boxplot
?boxplot
boxplot(data1, col="skyblue", main="Setosa - Sepal.Width Box Plot")
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
oddSum(100)
oddSum(10)
sum(1,3,5,7,9)
# 1)
vec1 <- c(1:6)
# 2)
vec2 <- c(10:5)
# 1)
vec1 <- c(1:6); vec1
# 2)
vec2 <- c(10:5); vec2
# 3)
vec3 <- rep(1:3, each=2); vec3
# 4)
vec4 <- rep(1:3, 2); vec4
# 5)
vec5 <- seq(1, 11, 2); vec5
v1 <- c("강경학", "김태균", "이성열", "정은원")
v2 <- c(90, 78, 94, 70)
v3 <- c(50, 60, 90, 92)
df_score <- data.frame(이름=v1, 중간=v2, 기말=v3)
df_score
v4 <- c()
mean <- c()
for(i in 1:nrow(df_score)) {
v4 <- rbind(v4, c(df_score$중간[i], df_score$기말[i]))
mean <- rbind(mean, mean(v4[i,]))
}
df_score$평균 <- mean
df_score
df_score$평균 <- mean(c(df_score$중간, df_score$기말))
df_score
df_score$평균 <- NA
df_score
df_score$평균 <- NA
df_score
for(i in 1:nrow(df_score)) {
df_score$평균[i] <- mean(c(df_score$중간[i], df_score$기말[i]))
}
df_score
df_score
for(i in 1:nrow(data1)) {
if(data1[i,] < 2.5) print(i)
}
rdata1 <- data1[-42,]
data3 <- c(mean(rdata1), sd(rdata1))
data3
data2
data3
b1
select(b1, 선수명, OPS, 연봉대비OPS)
colnames(data2[-1])
stars(data2, flip.labels=F, labels=colnames(data2[,-1]),
draw.segments=T, frame.plot=T, full=T, main='야구 선수별 주요 성적 분석-2013년')
oddSum <- function(num) {
sum <- 1
for(i in 2:num) {
if(i %% 2 == 1) {
sum <- sum + i
}
}
return(sum)
}
oddSum(100)
# 1) "setosa" 종 Sepal.Width의 Box Plot을 그려 이상치를 확인할 것
data1 <- select(subset(iris, Species == "setosa"), Sepal.Width)
data1
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
# 2) 이상치를 제거하기 전과 후의 평균과 표준편차
data2 <- c(mean(data1$Sepal.Width), sd(data1$Sepal.Width))
for(i in 1:nrow(data1)) {
if(data1[i,] < 2.5) print(i)
}
rdata1 <- data1[-42,]
data3 <- c(mean(rdata1), sd(rdata1))
data2
data3
data1
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
data3
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise_each(funs(mean), cty, hwy) %>%
arrange(desc(cty, hwy)) %>%
head(3)
top3
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average_cty=mean(cty)) %>%
arrange(desc(average_cty)) %>%
head(7)
suv7
ggplot(suv7, aes(x=reorder(manufacturer, -average_cty),
y=average_cty, fill=manufacturer)) +
geom_bar(stat="identity") +
theme_light() +
ggtitle("시내연비 TOP7 SUV Manufacturer") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(hjust=1, vjust=1, size=10))
suv7
# 1) clarity 의 돗수를 보여주는 그래프
d <- diamonds %>%
group_by(clarity) %>%
summarise(count = n()) %>%
arrange(count)
d
ggplot(d, aes(x=clarity, y=count, fill=clarity)) + geom_histogram(stat="identity", position = "dodge") +
theme_light() +
ggtitle("clarity") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14))
# 2) clarity에 따른 가격의 변화를 보여주는 그래프
d2 <- diamonds %>%
group_by(clarity) %>%
summarise(average_price = mean(price)) %>%
arrange(average_price)
d2
ggplot(d2, aes(x=clarity, y=average_price, fill=clarity)) + geom_histogram(stat="identity", position = "dodge") +
theme_light() +
ggtitle("clarity * price") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14))
source('D:/Workspace-JWP/R_Data_Analysis/R-Lecture/Test/Test01.R', encoding = 'UTF-8', echo=TRUE)
# 1) OPS(출루율+장타율)와 연봉대비 OPS(OPS/연봉*100)를 구하시오
b <- read.csv("data/야구성적.csv")
# 1) OPS(출루율+장타율)와 연봉대비 OPS(OPS/연봉*100)를 구하시오
b <- read.csv("data/야구성적.csv")
b1 <- b %>%
mutate(OPS = 출루율+장타율) %>%
mutate(연봉대비OPS = OPS/연봉*100)
select(b1, 선수명, OPS, 연봉대비OPS)
# 2) 연봉대비OPS를 선수별로 비교할 수 있는 막대그래프
ggplot(b1, aes(x=선수명, y=연봉대비OPS, fill=선수명)) + geom_bar(stat="identity") +
theme_light() +
ggtitle("선수별 연봉대비OPS") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(hjust=1, vjust=1, angle = 45, size=10))
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise(average=mean(cty+hwy)) %>%
arrange(desc(average))
top3
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise(average=mean(cty+hwy)) %>%
arrange(desc(average)) %>%
head(3)
top3
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(model) %>%
summarise(average=mean(cty+hwy)) %>%
arrange(desc(average)) %>%
head(3)
top3
