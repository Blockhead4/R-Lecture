ggplot(data = ageg_income, aes(x=ageg, y=mean_income, fill=ageg)) +
geom_col()
# 파생 변수 만들기 - 연령대
welfare <- welfare %>%
mutate(ageg = ifelse(age < 30, "20대이하",
ifelse(age <= 39, "30대",
ifelse(age <= 49, "40대",
ifelse(age <= 59, "50대",
ifelse(age <= 69, "60대",
ifelse(age <= 79, "70대",
ifelse(age <= 89, "80대", "90대"))))))))
table(welfare$ageg)
qplot(welfare$ageg)
ageg_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income))
ageg_income
# 그래프 만들기
ggplot(data = ageg_income, aes(x=ageg, y=mean_income, fill=ageg)) +
geom_col()
# 파생 변수 만들기 - 연령대
welfare <- welfare %>%
mutate(ageg = ifelse(age < 30, "20대이하",
ifelse(age < 40, "30대",
ifelse(age < 50, "40대",
ifelse(age < 60, "50대",
ifelse(age < 70, "60대",
ifelse(age < 80, "70대",
ifelse(age < 90, "80대", "90대"))))))))
table(welfare$ageg)
qplot(welfare$ageg)
ageg_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income))
ageg_income
# 그래프 만들기
ggplot(data = ageg_income, aes(x=ageg, y=mean_income, fill=ageg)) +
geom_col()
# 파생 변수 만들기 - 연령대
welfare <- welfare %>%
mutate(ageg = ifelse(age < 30, "20대이하",
ifelse(age < 40, "30대",
ifelse(age < 50, "40대",
ifelse(age < 60, "50대", "60대 이상")))))
table(welfare$ageg)
qplot(welfare$ageg)
ageg_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income))
ageg_income
# 그래프 만들기
ggplot(data = ageg_income, aes(x=ageg, y=mean_income, fill=ageg)) +
geom_col()
# 그래프 만들기
ggplot(data = ageg_income, aes(x=ageg, y=mean_income, fill=ageg)) +
geom_col() +
scale_x_discrete("20대이하", "30대", "40대", "50대", "60대 이상")
# 그래프 만들기
ggplot(data = ageg_income, aes(x=ageg, y=mean_income, fill=ageg)) +
geom_col() +
scale_x_discrete("20대이하", "30대", "40대", "50대", "60대 이상")
# 그래프 만들기
ggplot(data = ageg_income, aes(x=ageg, y=mean_income, fill=ageg)) +
geom_col()
# 그래프 만들기
ggplot(data = ageg_income, aes(x=ageg, y=mean_income, fill=ageg)) +
geom_col() +
scale_x_discrete("20대이하", "30대", "40대", "50대", "60대 이상")
# 그래프 만들기
ggplot(data = ageg_income, aes(x=ageg, y=mean_income, fill=ageg)) +
geom_col() +
scale_x_discrete(ageg, "20대이하", "30대", "40대", "50대", "60대 이상")
# 5. 연령대 및 성별 월급 차이
# 성별 월급 차이는 연령대별로 다를까?
# 연령대 및 성별 월급 평균표 만들기
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg, sex) %>%
summarise(mean_income = mean(income))
sex_income
# 그래프 만들기
ggplot(data = sex_income, aes(x=ageg, y=mean_income, fill=sex)) + geom_col()
# 그래프 만들기
ggplot(data = sex_income, aes(x=ageg, y=mean_income, fill=sex)) +
geom_col() +
scale_x_discrete(limits = c("30대", "40대", "50대", "60대 이상", "20대이하"))
# 그래프 만들기
ggplot(data = sex_income, aes(x=ageg, y=mean_income, fill=sex)) +
geom_col() +
scale_x_discrete(limits = c("20대이하", "30대", "40대", "50대", "60대 이상"))
#  분리된 막대그래프 만들기
ggplot(data = sex_income, aes(x=ageg, y=mean_income, fill=sex)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = c("20대이하", "30대", "40대", "50대", "60대 이상"))
# 라인 그래프 그리기
ggplot(data = sex_income, aes(x=ageg, y=mean_income, fill=sex)) +
geom_line() +
scale_x_discrete(limits = c("20대이하", "30대", "40대", "50대", "60대 이상"))
# 라인 그래프 그리기
ggplot(data = sex_income, aes(x=ageg, y=mean_income, fill=sex)) +
geom_line(stat="identity") +
scale_x_discrete(limits = c("20대이하", "30대", "40대", "50대", "60대 이상"))
# 라인 그래프 그리기
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
sex_age
ggplot(sex_age, aes(x=age, y=mean_income, col=sex)) +
geom_line()
ggplot(sex_age, aes(x=age, y=mean_income, col=sex)) +
geom_line(size=1)
# 4. 직업별 월급 차이
# 어떤 직업이 월급을 가장 많이 받을까?
# 변수 검토하기
class(welfare$code_job)
table(welfare$code_job)
summary(welfare$code_job)
list_job <- read_excel("example/09-1.Koweps_Codebook.xlsx", col_names = T, sheet = 2)
head(list_job)
dim(list_job)
welfare <- left_join(welfare, list_job, id = "code_job")
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job, job) %>%
head(10)
# 직업별 월급 평균표 만들기
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
job_income
head(job_income)
# 직업별 월급 평균표 만들기
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%
head(10)
head(job_income)
ggplot(data=job_income, aes(x=job, y=mean_income, fill=job)) + geom_col
ggplot(data=job_income, aes(x=job, y=mean_income, fill=job)) + geom_col()
# 직업별 월급 평균표 만들기
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
head(job_income)
# 직업별 월급 평균표 만들기
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
head(job_income)
top10 <- job_income %>%
arrange(desc(mean_income)) %>%
head(10)
top10
ggplot(top10, aes(x=job, y=mean_income, fill=job)) + geom_col()
ggplot(top10, aes(x=job, y=mean_income, fill=job)) + geom_col(horiz =T)
ggplot(top10, aes(x=job, y=mean_income, fill=job)) + geom_col() +
coord_flip()
ggplot(top10, aes(x=job, y=mean_income, fill=job)) +
geom_col() +
coord_flip()
ggplot(top10, aes(x=reorder(job, mean_income), y=mean_income, fill=job)) +
geom_col() +
coord_flip()
# 하위 10개 추출
bottom10 <- job_income %>%
arrange(mean_income) %>%
head(10)
bottom10
ggplot(bottom10, aes(x=reorder(job, mean_income), y=mean_income, fill=job)) +
geom_col() +
coord_flip()    # x와 y의 좌표를 바꿔서 출력
ggplot(bottom10, aes(x=reorder(job, -mean_income), y=mean_income, fill=job)) +
geom_col() +
coord_flip()    # x와 y의 좌표를 바꿔서 출력
# 5. 성별 직업 빈도
# 성별로 어떤 직업이 가장 많을까?
# 성별 직업 빈도표 만들기
job_male <- welfare %>%
filter(!is.na(job) & sex == "male") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_male
job_female <- welfare %>%
filter(!is.na(job) & sex == "female") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_female
# 그래프 만들기
# 남성 직업 빈도 상위 10개 직업
ggplot(data=job_male, aes(x=job, y=n, fill=job)) + geom_col() + coord_flip()
# 그래프 만들기
# 남성 직업 빈도 상위 10개 직업
ggplot(data=job_male, aes(x=reorder(job, n), y=n, fill=job)) +
geom_col() +
coord_flip()
# 여성 직업 빈도 상위 10개 직업
ggplot(data=job_female, aes(x=reorder(job, n), y=n, fill=job)) +
geom_col() +
coord_flip()
# 종교 유무에 따른 이혼율
# 변수 검토하기
welfare$code_region
# 종교 유무에 따른 이혼율
# 변수 검토하기
class(welfare$code_region)
summary(welfare$code_region)
str(welfare$code_region)
table(welfare$code_region)
# 종교 유무에 따른 이혼율
# 변수 검토하기
class(welfare$religion)
summary(welfare$religion)
table(welfare$religion)
# 전처리
welfare$religion <- ifelse(welfare$religion == 1, "yes", "no")
table(welfare$religion)
qplot(welfare$religion)
# 혼인 상태 변수 검토 및 전처리
# 변수 검토하기
class(welfare$marriage)
table(welfare$marriage)
# 이혼 여부 변수 만들기
welfare$group_marriage <- ifelse(welfare$marriage == 1 , "marriage",
ifelse(welfare$marriage == 3, "divorce", NA))
table(welfare$group_marriage)
table(is.na(welfare$group_marriage))
qplot(welfare$group_marriage
)
# 종교 유무에 따른 이혼율 표 만들기
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100, 1))
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion, group_marriage)
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion, group_marriage) %>%
mutate(pct = round(n/tot_group*100, 1))
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion, group_marriage) %>%
mutate(pct = round(n/sum(n)*100, 1))
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion, group_marriage)
religion_marriage
# 종교 유무에 따른 이혼율 표 만들기
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100, 1))
religion_marriage
religion_marriage_1 <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion, group_marriage)
religion_marriage_1
# 이혼율 표 만들기
divorce <- religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(religion, pct)
divorce
# 그래프 만들기
ggplot(divorce, aes(x=religion, y=pct, fill=religion)) + geom_col()
religion_marriage_1 <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion, group_marriage) %>%
mutate(pct = round(n/sum(n)*100, 1))
religion_marriage_1
# 종교 유무에 따른 이혼율 표 만들기
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100, 1))
religion_marriage
religion_marriage_1 <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion, group_marriage) %>%
mutate(pct = round(n/sum(n)*100, 1))
religion_marriage_1
# 7. 연령대별 이혼율 표 만들기
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100, 1))
ageg_marriage
# 초년 제외, 이혼 추출
ageg_divorce <- ageg_marriage %>%
filter(ageg != "young" & group_marriage == "divorce") %>%
select(ageg, pct)
ageg_divorce
# 그래프 만들기
ggplot(ageg_divorce, aes(x=ageg, y=pct, fill=ageg)) +
geom_col()
# 파생 변수 만들기 - 연령대
welfare <- welfare %>%
mutate(ageg = ifelse(age < 30, "20대이하",
ifelse(age < 40, "30대",
ifelse(age < 50, "40대",
ifelse(age < 60, "50대", "60대이상")))))
table(welfare$ageg)
qplot(welfare$ageg)
# 그래프 만들기
ggplot(data = sex_income, aes(x=ageg, y=mean_income, fill=sex)) +
geom_col() +
scale_x_discrete(limits = c("20대이하", "30대", "40대", "50대", "60대이상"))
# 분리된 막대그래프 만들기
ggplot(data = sex_income, aes(x=ageg, y=mean_income, fill=sex)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = c("20대이하", "30대", "40대", "50대", "60대이상"))     # x축 레이블의 순서 지정
# 초년 제외, 이혼 추출
ageg_divorce <- ageg_marriage %>%
filter(ageg != "20대이하" & group_marriage == "divorce") %>%
select(ageg, pct)
ageg_divorce
# 그래프 만들기
ggplot(ageg_divorce, aes(x=ageg, y=pct, fill=ageg)) +
geom_col()
# 8. 연령대 및 종교유무, 결혼상태별 비율표 만들기
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "20대이하") %>%
group_by(ageg, religion, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_religion_marriage
# 연령대 및 종교 유무별 이혼율 표 만들기
df_divorce <- ageg_religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(ageg, religion, pct)
df_divorce
# 연령대 및 종교 유무별 이혼율 그래프 만들기
ggplot(df_divorce, aes(x=ageg, y=pct, fill=religion)) +
geom_col()
# 연령대 및 종교 유무별 이혼율 그래프 만들기
ggplot(df_divorce, aes(x=ageg, y=pct, fill=religion)) +
geom_col(position = "dodge")
# 9. 지역별 연령대 비율
# 노년층이 많은 지역은 어디일까?
# 변수 검토하기
class(welfare$code_region)
table(welfare$code_region)
# 전처리
list_region <- data.frame(code_region = c(1:7),
region = c("서울",
"수도권(인천/경기)",
"부산/경남/울산",
"대구/경북",
"대전/충남",
"강원/충북",
"광주/전남/전북/제주도"))
list_region
# welfare 에 지역명 변수 추가
welfare <- left_join(welfare, list_region, id = "code_rigion")
# welfare 에 지역명 변수 추가
welfare <- left_join(welfare, list_region, id = "code_region")
# welfare 에 지역명 변수 추가
welfare <- left_join(welfare, list_region, id = "code_region")
welfare %>%
select(code_region, region)
welfare %>%
select(code_region, region) %>%
head
# 지역별 연령대 비율표 만들기
region_ageg <- welfare %>%
group_by(region, ageg) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100, 2))
head(region_ageg)
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(posiotion ="dodge")
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(position ="dodge")
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip()
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(position = "dodge") +
coord_flip()
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip()
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits = c("20대이하", "30대", "40대", "50대", "60대이상"))
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip()
region_ageg$ageg <- factor(region_ageg$ageg, levels = c("20대이하", "30대", "40대", "50대", "60대이상"))
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip()
region_ageg$ageg
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip()
# 노년층 비율 내림차순 정렬
list_order_old <- region_ageg %>%
filter(ageg = "60대이상") %>%
arrange(desc(pct))
# 노년층 비율 내림차순 정렬
list_order_old <- region_ageg %>%
filter(ageg == "60대이상") %>%
arrange(desc(pct))
list_order_old
ggplot(list_order_old, aes(x=region, y=pct, fill=ageg)) +
geom_col()
ggplot(list_order_old, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip()
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits = order)
order
order <- list_order_old$region
order
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits = order)
order <- list_order_old$region
order
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits = order)
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(position = "dodge") +
coord_flip() +
scale_x_discrete(limits = order)
list_order_old
order
# 노년층 비율 내림차순 정렬
list_order_old <- region_ageg %>%
filter(ageg == "60대이상") %>%
arrange((pct))
list_order_old
order <- list_order_old$region
order
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(position = "dodge") +
coord_flip() +
scale_x_discrete(limits = order)
region_ageg$ageg
class(region_ageg$ageg)
region_ageg$ageg <- factor(region_ageg, levles = c("20대이하", "30대", "40대", "50대", "60대이상"))
region_ageg$ageg <- factor(region_ageg$ageg, levles = c("20대이하", "30대", "40대", "50대", "60대이상"))
levels(region_ageg$ageg)
region_ageg$ageg <- factor(region_ageg$ageg, levles = c("60대이상", "50대", "40대", "30대", "20대이하"))
levels(region_ageg$ageg)
region_ageg$ageg <- factor(region_ageg$ageg, levels = c("60대이상", "50대", "40대", "30대", "20대이하"))
levels(region_ageg$ageg)
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(position = "dodge") +
coord_flip() +
scale_x_discrete(limits = order)
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(position = "dodge")
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip()
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(position = "dodge") +
coord_flip() +
scale_x_discrete(limits = order)
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(position = "dodge") +
coord_flip() +
scale_x_discrete(limits = order)
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(position = "dodge") +
coord_flip()
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col(position = "dodge") +
coord_flip() +
scale_x_discrete(limits = order)
